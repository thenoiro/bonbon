const visualData = {
    fb1: [
        '##############################################################',
        '##..##..##..........##......##..........##..##..........##..##',
        '##..##..##..##..######..######..######..##..######..##..##..##',
        '##......##..##..##..............##......##..........##......##',
        '##..######..##..##..######..######..######..######..######..##',
        '##..........##..........##......##..............##......##....',
        '##############################################################',
    ],
    fb2: [
        '##############################################################',
        '##..........##..........##......##..........##......##......##',
        '##..######..######..##..##..##..##..##..##..##..##......######',
        '##......##..##......##......##......##..##..##..##..##......##',
        '######..##..##..##..##..##########..##..######..##..####..####',
        '##......##......##..##......##......##..........##....##......',
        '##############################################################'
    ],
    area: [
        '..............................................................##############################################################..............................................................',
        '..............................................................######..##########..##########..##########..##########..######..............................................................',
        '..............................................................######..##########..##########..##########..##########..######..............................................................',
        '..............................................................######..##########..##########..##########..##########..######..............................................................',
        '..............................................................######..##########..##########..##########..##########..######..............................................................',
        '..............................................................######..##########..##########..##########..##########..######..............................................................',
        '..............................................................##############################################################..............................................................'
    ]
};

const config = {
    bar1: visualData.fb1.map(transformToBite),
    bar2: visualData.fb2.map(transformToBite).map(invertX),
    area: visualData.area.map(transformToBite),
    cellSize: 20
};


function transformToBite(data) {
    const filled = '#';
    const step = 2;

    let biteCode = [];
    let pos = 0;

    while (pos < data.length) {
        data[pos] === filled ? biteCode.push(1) : biteCode.push(0);
        pos += step
    }
    return biteCode;
}
function invertX(data) {
    return data.reverse();
}

export default config;